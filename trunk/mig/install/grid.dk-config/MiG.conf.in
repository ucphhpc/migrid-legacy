# This is the MiG specific apache configuration.
# It overrides some settings from the main configuration to be able to simply include
# this configuration from any 'vanilla' httpd.conf.

# This version: (c) 6/2009 grid.dk, Jost Berthold
# cut down to fit into our CEntOS-5/confusa server installation.
# 1. does not assume to override settings, but leaves them 
#    as they are, unless absolutely necessary.
# 2. Listens on a different virtual host, to separate from "normal" 
#    http traffic.
# 3. Uses the standard apache user "apache". 


# Configure PUT script
<IfModule mod_actions.c>
	#
	# Action lets you define media types that will execute a script whenever
	# a matching file is called. This eliminates the need for repeated URL
	# pathnames for oft-used CGI file processors.
	# Format: Action media/type /cgi-script/location
	# Format: Action handler-name /cgi-script/location
	#
	# We need to let implicit put hit SID to allow resources and oneclick
	# Browser upload uses POST and migscripts use explict CERTPUT
	Script PUT /cgi-sid/put
	Script SIDPUT /cgi-sid/put
	Script CERTPUT /cgi-bin/put
</IfModule>

# Configure ordinary virtual host
<VirtualHost *:__HTTP_PORT__>
	# General setup for the virtual host
	ServerName __SERVER_FQDN__
	DocumentRoot "__MIG_STATE__/wwwpublic"
	ErrorLog __APACHE_LOG__/error.log
	CustomLog __APACHE_LOG__/access.log common

        # Public images shared by http and https pages and scripts
	Alias /images/ __MIG_HOME__/images/
	<Directory __MIG_HOME__/images>
	    AllowOverride None
	    Order allow,deny
	    Allow from all
	</Directory>
	# Other public pages
	Alias  /public/ __MIG_STATE__/wwwpublic/
	<Directory "__MIG_STATE__/wwwpublic">
	      #Allow everyone here
	      AllowOverride All
	      Order allow,deny
	      Allow from all
	</Directory>

</VirtualHost>

# Configure SSL (certificates and CAs) and virtual host

# this is done inside any default ssl.conf. Enable if necessary.
# LoadModule ssl_module modules/mod_ssl.so

# enable this line when listening to a different port than 443
# Listen __HTTPS_PORT__

# The following settings for SSL apply to all virtual hosts!  

# MiG.conf will win over the settings inside ssl.conf (read
# later). See comments in ssl.conf for the meaning of the options.

# our server certificate:
SSLCertificateFile __MIG_CERTS__/server.crt
SSLCertificateKeyFile __MIG_CERTS__/server.key

# This should be our own CA:
SSLCACertificateFile __MIG_CERTS__/ca.crt
SSLCARevocationFile __MIG_CERTS__/ca-crl.pem

# We can also store other CAs we accept for client authorisation
# with hashed names, and respective CRLs.
# SSLCACertificatePath __MIG_CERTS__
# SSLCARevocationPath __MIG_CERTS__


<VirtualHost *:__HTTPS_PORT__>
	#  General setup for the virtual host
	ServerName __SERVER_FQDN__
	DocumentRoot "__MIG_STATE__/user_home"
	ErrorLog __APACHE_LOG__/ssl-error.log
	CustomLog __APACHE_LOG__/ssl-access.log common

        # Keep cgi-cert name for backwards compatibility but point it
        # to cgi-bin
        ScriptAlias /cgi-cert/ "__MIG_HOME__/cgi-bin/"
        ScriptAlias /cgi-bin/ "__MIG_HOME__/cgi-bin/"
        ScriptAlias /cgi-sid/ "__MIG_HOME__/cgi-sid/"
	
	#   SSL Engine Switch:
	#   Enable/Disable SSL for this virtual host.
	SSLEngine on

	# SSL options that depend on which virtual host is used
	#   Client Authentication (Type):
	#   Client certificate verification type and depth.  Types are
	#   none, optional, require and optional_no_ca.  Depth is a
	#   number which specifies how deeply to verify the certificate
	#   issuer chain before deciding the certificate is not valid.
	#SSLVerifyClient require
	#SSLVerifyDepth  10

	#   Access Control:
	#   With SSLRequire you can do per-directory access control based
	#   on arbitrary complex boolean expressions containing server
	#   variable checks and other lookup directives.  The syntax is a
	#   mixture between C and Perl.  See the mod_ssl documentation
	#   for more details.
	#<Location />
	#SSLRequire (    %{SSL_CIPHER} !~ m/^(EXP|NULL)/ \
	#            and %{SSL_CLIENT_S_DN_O} eq "Snake Oil, Ltd." \
	#            and %{SSL_CLIENT_S_DN_OU} in {"Staff", "CA", "Dev"} \
	#            and %{TIME_WDAY} >= 1 and %{TIME_WDAY} <= 5 \
	#            and %{TIME_HOUR} >= 8 and %{TIME_HOUR} <= 20       ) \
	#           or %{REMOTE_ADDR} =~ m/^192\.76\.162\.[0-9]+$/
	#</Location>

	#   SSL Engine Options:
	#   Set various options for the SSL engine.
	#   o FakeBasicAuth:
	#     Translate the client X.509 into a Basic Authorisation.  This means that
	#     the standard Auth/DBMAuth methods can be used for access control.  The
	#     user name is the `one line' version of the client's X.509 certificate.
	#     Note that no password is obtained from the user. Every entry in the user
	#     file needs this password: `xxj31ZMTZzkVA'.
	#   o ExportCertData:
	#     This exports two additional environment variables: SSL_CLIENT_CERT and
	#     SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
	#     server (always existing) and the client (only existing when client
	#     authentication is used). This can be used to import the certificates
	#     into CGI scripts.
	#   o StdEnvVars:
	#     This exports the standard SSL/TLS related `SSL_*' environment variables.
	#     Per default this exportation is switched off for performance reasons,
	#     because the extraction step is an expensive operation and is usually
	#     useless for serving static content. So one usually enables the
	#     exportation for CGI and SSI requests only.
	#   o StrictRequire:
	#     This denies access when "SSLRequireSSL" or "SSLRequire" applied even
	#     under a "Satisfy any" situation, i.e. when it applies access is denied
	#     and no other module can change it.
	#   o OptRenegotiate:
	#     This enables optimized SSL connection renegotiation handling when SSL
	#     directives are used in per-directory context. 
	#SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
	<Files ~ "\.(cgi|shtml|phtml|php3?)$">
	    SSLOptions +StdEnvVars
	</Files>

	# Rewriting
	RewriteEngine on
        RewriteLog __APACHE_LOG__/rewrite.log
	# Notice: Using a high value for RewriteLogLevel will slow down your Apache 
	# server dramatically! 
	# Use the rewriting logfile at a Level greater than 2 only for debugging!
	RewriteLogLevel 0

        # Redirect to file in vgrid
	RewriteCond %{REQUEST_URI} ^/vgrid/*/*
	RewriteRule ^/vgrid/([^/]*)/(.*) /cgi-bin/showvgridprivatefile.py?vgrid_name=$1&file=$2 [L,R]

        # Redirect to member/owner wiki in vgrid - we need to introduce a vgrid_shared
	# to be able to discriminate between vgridwiki dir and normal dirs in rewrite
	RewriteCond %{REQUEST_URI} ^/vgridwiki/*
	RewriteRule ^/vgridwiki/(.*) /cert_redirect/vgrid_shared/$1/.vgridwiki/cgi-bin/moin.cgi [L,R]

        # Redirect to owner wiki in vgrid
	RewriteCond %{REQUEST_URI} ^/vgridownerwiki/*
	RewriteRule ^/vgridownerwiki/(.*) /cert_redirect/private_base/$1/.vgridwiki/cgi-bin/moin.cgi [L,R]

        # Redirect to public wiki in vgrid
	RewriteCond %{REQUEST_URI} ^/vgridpublicwiki/*
	RewriteRule ^/vgridpublicwiki/(.*) /cert_redirect/public_base/$1/.vgridwiki/cgi-bin/moin.cgi [L,R]
	
	# Redirect server status requests to /SERVER_NAME/SERVERNAME.status
	RewriteCond %{REQUEST_URI} ^/server_status
	RewriteRule ^/server_status /%{SERVER_NAME}/%{SERVER_NAME}.status [NE,L]

	#################################################################################
	#################################################################################

	# Redirect user GET file with cert_redirect in request to users home dir.
	# Get the DN from the certificate of the user.
	#
	# Rewrite DN slightly to match the actual file system homes. I.e. replace space 
	# with underscore and slash with plus in certificate DN.
	#
	# As an example we want the PATH for the user with DN: 
	# /C=DK/ST=NA/L=NA/O=DIKU/OU=NA/CN=Jonas Bardino/emailAddress=bardino@diku.dk
	# to be mapped to 
	# /+C=DK+ST=NA+L=NA+O=DIKU+OU=NA+CN=Jonas_Bardino+emailAddress=bardino@diku.dk/PATH
	# 
	# Access is restricted with htaccess file in user homes so nothing to worry about 
	# in relation to users spoofing rewrite targets.

	# Prepend certificate DN so that we can modify it further without PATH interference 

	RewriteRule ^/cert_redirect/(.*) %{LA-U:ENV:SSL_CLIENT_S_DN}/cert_redirect/$1 [NE]

	# Keep replacing space in DN with underscore
	
	RewriteRule ^(.*)\ (.*)/cert_redirect/(.*)$ $1_$2/cert_redirect/$3 [N]
	
	# Keep replacing slash in DN with plus
	
	RewriteRule ^(.*)/(.*)/cert_redirect/(.*)$ $1+$2/cert_redirect/$3 [N]

	# Finally remove certificate marker
	RewriteRule ^(.+)/cert_redirect/(.*)$ /$1/$2 [N]
	
	#################################################################################
	#################################################################################
	
        # We need to let vgrid wiki cgi requests pass through to ScriptAlias* handlers
	# NB: first regex group *must* match DNs only - not '.*'!
	RewriteRule ^/([^/]+)/public_base/(.*)/.vgridwiki/cgi-bin(.*)$ /$1/public_base/$2/.vgridwiki/cgi-bin$3 [L,PT]
	RewriteRule ^/([^/]+)/private_base/(.*)/.vgridwiki/cgi-bin(.*)$ /$1/private_base/$2/.vgridwiki/cgi-bin$3 [L,PT]
	RewriteRule ^/([^/]+)/vgrid_shared/(.*)/.vgridwiki/cgi-bin(.*)$ /$1/vgrid_shared/$2/.vgridwiki/cgi-bin$3 [L,PT]

        # Public images shared by http and https pages and scripts
	Alias /images/ __MIG_HOME__/images/
	<Directory __MIG_HOME__/images>
		AllowOverride None
		Order allow,deny
		Allow from all
	</Directory>
									
	<Directory "__MIG_HOME__/">
		# Deny all access to base mig dir and only allow on a subdir basis
		Order deny,allow
		Deny from all
	</Directory>
	<Directory "__MIG_HOME__/cgi-bin">
		AllowOverride None
		Options +ExecCGI
		Order allow,deny
		Allow from all
		SSLVerifyClient require
		SSLOptions +StdEnvVars
	</Directory>
	<Directory "__MIG_HOME__/cgi-sid">
		AllowOverride None
		Options +ExecCGI
		Order allow,deny
		Allow from all
		#SSLVerifyClient none
		SSLOptions +StdEnvVars
	</Directory>
	<Directory "__MIG_STATE__/">
		# Deny all access to base state dir and only allow on a subdir basis
		Order deny,allow
		Deny from all
	</Directory>
	<Directory "__MIG_STATE__/user_home">
		SSLVerifyClient require
		# The next line is crucial for cert_redirect to work!!!
		SSLOptions +StdEnvVars +FakeBasicAuth +ExportCertData
		# This dir is used for a number of public images and templates
		# Access to user home dirs is limited in .htaccess files there.
		Order allow,deny
		Allow from all
	</Directory>
	<Directory "__MIG_STATE__/user_home/*">
		SSLVerifyClient require
		# Allow .htaccess files for auth
		AllowOverride All
		SSLOptions +StdEnvVars +FakeBasicAuth +ExportCertData +StrictRequire
	</Directory>
	# SID access from resources
	Alias /sid_redirect/ "__MIG_STATE__/webserver_home/"
	<Directory "__MIG_STATE__/webserver_home/">
		SSLVerifyClient none
		SSLOptions +StdEnvVars
		Options FollowSymLinks
		Order deny,allow
		Allow from all
	</Directory>

# BEGIN FOR MiG VGrid MOIN MOIN
	Alias /wiki/ "/usr/share/moin/htdocs/"

	# Home directory wiki access - we need to avoid catching raw cert_redirect URLs
	ScriptAliasMatch ^/([^/]+)/public_base/(.*)/.vgridwiki/cgi-bin/(.*) __MIG_STATE__/user_home/$1/public_base/$2/.vgridwiki/cgi-bin/$3
	ScriptAliasMatch ^/([^/]+)/private_base/(.*)/.vgridwiki/cgi-bin/(.*) __MIG_STATE__/user_home/$1/private_base/$2/.vgridwiki/cgi-bin/$3
	ScriptAliasMatch ^/([^/]+)/vgrid_shared/(.*)/.vgridwiki/cgi-bin/(.*) __MIG_STATE__/user_home/$1/$2/.vgridwiki/cgi-bin/$3
# END FOR MiG VGrid MOIN MOIN

</VirtualHost>
