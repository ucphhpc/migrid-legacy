# This is the MiG specific apache configuration.
# It overrides some settings from the main configuration to be able to simply
# include this configuration from any 'vanilla' httpd.conf.
# Only tested with debian + apache 2.2 but should work with others.

# Server name - comment out to just use hostname
ServerName __PUBLIC_FQDN__

# Point users in the right direction on errors
ServerAdmin __USER__

# We may need to run as MiG user or group for file access to work
# through CGI scripts and for direct user file access
__USER_CLAUSE__ __USER__
__GROUP_CLAUSE__ __GROUP__

# Performance Tuning
StartServers 5
MaxClients 250
MaxRequestsPerChild 10000

# Support relocatable configuration if possible
<IfModule mod_env.c>
	SetEnv MIG_CONF	__MIG_HOME__/server/MiGserver.conf
</IfModule>

# Configure WSGI if available
<IfModule mod_wsgi.c>
	# Run WSGI in daemon mode with multiprocessing-only for isolation.
	# Additional information in 'The mod_wsgi Daemon Processes' on:
	# http://code.google.com/p/modwsgi/wiki/ProcessesAndThreading
	#
	# We preserve the default WSGIApplicationGroup setting of '%{RESOURCE}'
	# to force every single application into a dedicated sub-interpreter
	# for complete isolation. This includes different VGrid Trac instances.
	WSGIDaemonProcess __PUBLIC_FQDN__ processes=5 threads=1 display-name=%{GROUP} user=__USER__ group=__GROUP__ python-path=__MIG_HOME__  maximum-requests=1000
	WSGIProcessGroup __PUBLIC_FQDN__
	WSGIScriptAlias /wsgi-bin __MIG_HOME__/wsgi-bin/migwsgi.py
	# Optional software repository from grid.dk (partial checkout)
	WSGIScriptAlias /software-repository __MIG_HOME__/software-repository/swrepo.py
	# Optional VGrid components
	WSGIScriptAliasMatch ^/([^/]+)/private_base/(.*)/.vgrid([^/]+)/wsgi-bin/(.*) __MIG_STATE__/user_home/$1/private_base/$2/.vgrid$3/wsgi-bin/$4
	WSGIScriptAliasMatch ^/([^/]+)/vgrid_shared/(.*)/.vgrid([^/]+)/wsgi-bin/(.*) __MIG_STATE__/user_home/$1/$2/.vgrid$3/wsgi-bin/$4
</IfModule>

# Configure PUT script
<IfModule mod_actions.c>
	#
	# Action lets you define media types that will execute a script
	# whenever a matching file is called. This eliminates the need for
	# repeated URL pathnames for oft-used CGI file processors.
	# Format: Action media/type /cgi-script/location
	# Format: Action handler-name /cgi-script/location
	#
	# We need to let implicit put hit SID to allow resources and oneclick
	# Browser upload uses POST and migscripts use explict CERTPUT
	Script PUT /cgi-sid/put
	Script SIDPUT /cgi-sid/put
	Script CERTPUT /cgi-bin/put
</IfModule>

# Configure SSL
# The whole SSL configuration in this context applies both to
# the main server and all SSL-enabled virtual hosts.
<IfModule mod_ssl.c>
	# These should only be explicitly set if not already set
	# elsewhere. This is the case with custom ports or with old
	# apache 1.3.x on Debian, so listen_prefix should be set to '#'
	# with apache 2.x when ports are already configured elsewhere.
	__LISTEN_CLAUSE__ __PUBLIC_PORT__
	__LISTEN_CLAUSE__ __CERT_PORT__
	__IF_SEPARATE_PORTS____LISTEN_CLAUSE__ __SID_PORT__

	# Some MIME-types for downloading Certificates and CRLs
	AddType application/x-x509-ca-cert .crt
	AddType application/x-pkcs7-crl    .crl

	# Semaphore:
	#   Configure the path to the mutual exclusion semaphore the
	#   SSL engine uses internally for inter-process synchronization.
	SSLMutex sem

	# Inter-Process Session Cache:
	#   Configure the SSL Session Cache: First either `none'
	#   or `dbm:/path/to/file' for the mechanism to use and
	#   second the expiring timeout (in seconds).
	SSLSessionCache         shm:__APACHE_RUN__/mod_ssl_scache
	SSLSessionCacheTimeout  300

	# Pseudo Random Number Generator (PRNG):
	#   Configure one or more sources to seed the PRNG of the 
	#   SSL library. The seed data should be of good random quality.
	SSLRandomSeed startup file:/dev/urandom 1024
	SSLRandomSeed connect file:/dev/urandom 1024

	#   SSL Cipher Suite:
	#   List the ciphers that the client is permitted to negotiate.
	#   See the mod_ssl documentation for a complete list.
	SSLCipherSuite HIGH:MEDIUM

	#   Server Certificate:
	#   Point SSLCertificateFile at a PEM encoded certificate.  If
	#   the certificate is encrypted, then you will be prompted for a
	#   pass phrase.  Note that a kill -HUP will prompt again. A test
	#   certificate can be generated with `make certificate' under
	#   built time. Keep in mind that if you've both a RSA and a DSA
	#   certificate you can configure both in parallel (to also allow
	#   the use of DSA ciphers, etc.)
	SSLCertificateFile __MIG_CERTS__/server.crt

	#   Server Private Key:
	#   If the key is not combined with the certificate, use this
	#   directive to point at the key file.  Keep in mind that if
	#   you've both a RSA and a DSA private key you can configure
	#   both in parallel (to also allow the use of DSA ciphers, etc.)
	SSLCertificateKeyFile __MIG_CERTS__/server.key

	#   Certificate Authority (CA):
	#   Set the CA certificate verification path where to find CA
	#   certificates for client authentication or alternatively one
	#   huge file containing all of them (file must be PEM encoded)
	#   Note: Inside SSLCACertificatePath you need hash symlinks
	#         to point to the certificate files. Use the provided
	#         Makefile to update the hash symlinks after changes.
	SSLCACertificateFile __MIG_CERTS__/cacert.pem

	#   Certificate Revocation Lists (CRL):
	#   Set the CA revocation path where to find CA CRLs for client
	#   authentication or alternatively one huge file containing all
	#   of them (file must be PEM encoded)
	#   Note: Inside SSLCARevocationPath you need hash symlinks
	#         to point to the certificate files. Use the provided
	#         Makefile to update the hash symlinks after changes.
	SSLCARevocationFile __MIG_CERTS__/crl.pem

	#   SSL Protocol Adjustments:
	#   The safe and default but still SSL/TLS standard compliant shutdown
	#   approach is that mod_ssl sends the close notify alert but doesn't
	#   wait for the close notify alert from client. When you need a
	#   different shutdown approach you can use one of the following
	#   variables:
	#   o ssl-unclean-shutdown:
	#     This forces an unclean shutdown when the connection is closed, 
	#     i.e. no SSL close notify alert is send or allowed to received.
	#     This violates the SSL/TLS standard but is needed for some 
	#     brain-dead browsers. Use this when you receive I/O errors because
	#     of the standard approach where mod_ssl sends the close notify
	#     alert.
	#   o ssl-accurate-shutdown:
	#     This forces an accurate shutdown when the connection is closed, 
	#     i.e. a SSL close notify alert is send and mod_ssl waits for the
	#     close notify alert of the client. This is 100% SSL/TLS standard
	#     compliant, but in practice often causes hanging connections with
	#     brain-dead browsers. Use this only for browsers where you know
	#     that their SSL implementation works correctly. 
	#   Notice: Most problems of broken clients are also related to the
	#   HTTP keep-alive facility, so you usually additionally want to
	#   disable keep-alive for those clients, too. Use variable
	#   "nokeepalive" for this.
	#   Similarly, one has to force some clients to use HTTP/1.0 to
	#   workaround their broken HTTP/1.1 implementation. Use variables
	#   "downgrade-1.0" and "force-response-1.0" for this.
	SetEnvIf User-Agent ".*MSIE.*" \
		nokeepalive ssl-unclean-shutdown \
		downgrade-1.0 force-response-1.0

</IfModule>

# Configure ordinary virtual host
<VirtualHost __PUBLIC_FQDN__:__PUBLIC_PORT__>
	# General setup for the virtual host
	DocumentRoot "__MIG_STATE__/wwwpublic"
	ErrorLog __APACHE_LOG__/error.log
	CustomLog __APACHE_LOG__/access.log common

	# Rewriting
	RewriteEngine on
	RewriteLog __APACHE_LOG__/rewrite.log
	# Notice: Using a high value for RewriteLogLevel will slow down your
	# Apache server dramatically! 
	# Only use a rewrite loglevel greater than 2 for debugging!
	RewriteLogLevel 0

	# Redirect to public wiki in vgrid (disabled for now to avoid abuse)
	#RewriteCond %{REQUEST_URI} ^/vgridpublicwiki
	#RewriteRule ^/vgridpublicwiki/(.*) /vgrid/$1/.vgridwiki/cgi-bin/moin.cgi/ [L,R]
	#RewriteRule ^/vgrid/(.*)/.vgridwiki/cgi-bin(.*)$ /vgrid/$1/.vgridwiki/cgi-bin$2 [L,PT]
	#ScriptAliasMatch ^/vgrid/(.*)/.vgridwiki/cgi-bin/(.*) __MIG_STATE__/wwwpublic/$1/.vgridwiki/cgi-bin/$2

	# Redirect to public scm in vgrid (disabled for now to avoid abuse)
	#RewriteCond %{REQUEST_URI} ^/vgridpublicscm
	#RewriteRule ^/vgridpublicscm/(.*) /vgrid/$1/.vgridscm/cgi-bin/hgweb.cgi [L,R]
	#RewriteRule ^/vgrid/(.*)/.vgridscm/cgi-bin(.*)$ /vgrid/$1/.vgridscm/cgi-bin$2 [L,PT]
	#ScriptAliasMatch ^/vgrid/(.*)/.vgridscm/cgi-bin/(.*) __MIG_STATE__/wwwpublic/$1/.vgridscm/cgi-bin/$2

	# Redirect to public tracker in vgrid (disabled for now to avoid abuse)
	#RewriteCond %{REQUEST_URI} ^/vgridpublictracker
	#RewriteRule ^/vgridpublictracker/(.*) /vgrid/$1/.vgridtracker/cgi-bin/hgweb.cgi [L,R]
	#RewriteRule ^/vgrid/(.*)/.vgridtracker/cgi-bin(.*)$ /vgrid/$1/.vgridtracker/cgi-bin$2 [L,PT]
	#ScriptAliasMatch ^/vgrid/(.*)/.vgridtracker/cgi-bin/(.*) __MIG_STATE__/wwwpublic/$1/.vgridtracker/cgi-bin/$2

	# Redirect to public file in vgrid
	RewriteCond %{REQUEST_URI} ^/vgrid/.*/path/.*
	RewriteRule ^/vgrid/(.*)/path/(.*) /vgrid/$1/$2 [L,R]
	
	# Default target for all directories not explicitly configured
	<Directory />
		# Disable all overrides
		AllowOverride None
		# Enable FollowSymlinks and nothing else for all sub dirs
		Options FollowSymLinks
		# Deny all access to base mig dir and only allow on a subdir
		# basis
		Order deny,allow
		Deny from all
	</Directory>
        # Public images shared by http and https pages and scripts
	Alias /images/ __MIG_HOME__/images/
	<Directory __MIG_HOME__/images>
	    Order allow,deny
	    Allow from all
	</Directory>
	# Other public pages
	Alias /public/ __MIG_STATE__/wwwpublic/
	<Directory "__MIG_STATE__/wwwpublic">
	      # Allow everyone here
	      Order allow,deny
	      Allow from all
	</Directory>
	# Public wiki templates (disabled for now)
	#Alias /wiki/ "__MOIN_SHARE__/htdocs/"
	#<Directory __MOIN_SHARE__/htdocs>
	#	Order allow,deny
	#	Allow from all
	#</Directory>
</VirtualHost>

# Configure SSL with certificates virtual host
<VirtualHost __CERT_FQDN__:__CERT_PORT__>
	# General setup for the virtual host
	ServerName __CERT_FQDN__
	# Enable the next line if you want common aliasing for public address
	__SERVERALIAS_CLAUSE__ __PUBLIC_FQDN__
	DocumentRoot "__MIG_STATE__/user_home"
	ErrorLog __APACHE_LOG__/ssl-cert-error.log
	CustomLog __APACHE_LOG__/ssl-cert-access.log common

        # Keep cgi-cert name for backwards compatibility but point it
        # to cgi-bin
        ScriptAlias /cgi-cert/ "__MIG_HOME__/cgi-bin/"
        ScriptAlias /cgi-bin/ "__MIG_HOME__/cgi-bin/"
        ScriptAlias /cgi-sid/ "__MIG_HOME__/cgi-sid/"
	
	#   SSL Engine Switch:
	#   Enable/Disable SSL for this virtual host.
	SSLEngine on

	# SSL options that depend on which virtual host is used
	#   Client Authentication (Type):
	#   Client certificate verification type and depth.  Types are
	#   none, optional, require and optional_no_ca.  Depth is a
	#   number which specifies how deeply to verify the certificate
	#   issuer chain before deciding the certificate is not valid.
	SSLVerifyClient require
	SSLVerifyDepth  10

	# Rewriting
	RewriteEngine on
	RewriteLog __APACHE_LOG__/ssl-cert-rewrite.log
	# Notice: Using a high value for RewriteLogLevel will slow down your
	# Apache server dramatically! 
	# Only use a rewrite loglevel greater than 2 for debugging!
	RewriteLogLevel 0

	# Redirect to private file in vgrid
	RewriteCond %{REQUEST_URI} ^/vgrid/.*/path/.*
	RewriteCond %{HTTP_REFERER} /wsgi-bin/
	RewriteRule ^/vgrid/(.*)/path/(.*) /wsgi-bin/showvgridprivatefile.py?vgrid_name=$1&path=$2 [L,R]
	RewriteCond %{REQUEST_URI} ^/vgrid/.*/path/.*
	RewriteRule ^/vgrid/(.*)/path/(.*) /cgi-bin/showvgridprivatefile.py?vgrid_name=$1&path=$2 [L,R]
	# if the "path" is missing, go to top level:
	# (if there was one, the previous rewrite rule has transformed it)
	RewriteCond %{REQUEST_URI} ^/vgrid/.*/$
	RewriteCond %{HTTP_REFERER} /wsgi-bin/
	RewriteRule ^/vgrid/(.*)/$ /wsgi-bin/showvgridprivatefile.py?vgrid_name=$1&path=index.html [L,R]
	RewriteCond %{REQUEST_URI} ^/vgrid/.*/$
	RewriteRule ^/vgrid/(.*)/$ /cgi-bin/showvgridprivatefile.py?vgrid_name=$1&path=index.html [L,R]

	# Redirect to member/owner wiki in vgrid - we need to introduce a
	# vgrid_shared to be able to discriminate between vgridwiki dir and
	# normal dirs in rewrite
	RewriteCond %{REQUEST_URI} ^/vgridwiki
	RewriteCond %{HTTP_REFERER} /wsgi-bin/
	RewriteRule ^/vgridwiki/(.*) /cert_redirect/vgrid_shared/$1/.vgridwiki/wsgi-bin/moin.wsgi/ [L,R]
	RewriteCond %{REQUEST_URI} ^/vgridwiki
	RewriteRule ^/vgridwiki/(.*) /cert_redirect/vgrid_shared/$1/.vgridwiki/cgi-bin/moin.cgi/ [L,R]

	# Redirect to owner wiki in vgrid
	RewriteCond %{REQUEST_URI} ^/vgridownerwiki
	RewriteCond %{HTTP_REFERER} /wsgi-bin/
	RewriteRule ^/vgridownerwiki/(.*) /cert_redirect/private_base/$1/.vgridwiki/wsgi-bin/moin.wsgi/ [L,R]
	RewriteCond %{REQUEST_URI} ^/vgridownerwiki
	RewriteRule ^/vgridownerwiki/(.*) /cert_redirect/private_base/$1/.vgridwiki/cgi-bin/moin.cgi/ [L,R]

	# Redirect to member/owner scm in vgrid - we need to introduce a
	# vgrid_shared to be able to discriminate between vgridscm dir and
	# normal dirs in rewrite
	RewriteCond %{REQUEST_URI} ^/vgridscm
	RewriteCond %{HTTP_REFERER} /wsgi-bin/
	RewriteRule ^/vgridscm/(.*) /cert_redirect/vgrid_shared/$1/.vgridscm/wsgi-bin/hgweb.wsgi [L,R]
	RewriteCond %{REQUEST_URI} ^/vgridscm
	RewriteRule ^/vgridscm/(.*) /cert_redirect/vgrid_shared/$1/.vgridscm/cgi-bin/hgweb.cgi [L,R]

	# Redirect to owner scm in vgrid
	RewriteCond %{REQUEST_URI} ^/vgridownerscm
	RewriteCond %{HTTP_REFERER} /wsgi-bin/
	RewriteRule ^/vgridownerscm/(.*) /cert_redirect/private_base/$1/.vgridscm/wsgi-bin/hgweb.wsgi [L,R]
	RewriteCond %{REQUEST_URI} ^/vgridownerscm
	RewriteRule ^/vgridownerscm/(.*) /cert_redirect/private_base/$1/.vgridscm/cgi-bin/hgweb.cgi [L,R]

	# Redirect to member/owner tracker in vgrid - we need to introduce a
	# vgrid_shared to be able to discriminate between vgridtracker dir and
	# normal dirs in rewrite. Preserve WSGI sessions but fall back to CGI.
	RewriteCond %{REQUEST_URI} ^/vgridtracker
	RewriteCond %{HTTP_REFERER} /wsgi-bin/
	RewriteRule ^/vgridtracker/(.*) /cert_redirect/vgrid_shared/$1/.vgridtracker/wsgi-bin/trac.wsgi [L,R]
	RewriteCond %{REQUEST_URI} ^/vgridtracker
	RewriteRule ^/vgridtracker/(.*) /cert_redirect/vgrid_shared/$1/.vgridtracker/cgi-bin/trac.cgi [L,R]

	# Redirect to owner tracker in vgrid. Preserve WSGI sessions but fall
	# back to CGI.
	RewriteCond %{REQUEST_URI} ^/vgridownertracker
	RewriteCond %{HTTP_REFERER} /wsgi-bin/
	RewriteRule ^/vgridownertracker/(.*) /cert_redirect/private_base/$1/.vgridtracker/wsgi-bin/trac.wsgi [L,R]
	RewriteCond %{REQUEST_URI} ^/vgridownertracker
	RewriteRule ^/vgridownertracker/(.*) /cert_redirect/private_base/$1/.vgridtracker/cgi-bin/trac.cgi [L,R]

	# Redirect server status requests to /SERVER_NAME/SERVERNAME.status
	RewriteCond %{REQUEST_URI} ^/server_status
	RewriteRule ^/server_status /%{SERVER_NAME}/%{SERVER_NAME}.status [NE,L]

	######################################################################
	######################################################################

	# Redirect user GET file with cert_redirect in request to users home
	# dir.
	# Get the DN from the certificate of the user.
	#
	# Rewrite DN slightly to match the actual file system homes. I.e.
	# replace space with underscore and slash with plus in certificate DN.
	#
	# As an example we want the PATH for the user with DN: 
	# /C=DK/ST=NA/L=NA/O=DIKU/OU=NA/CN=Jonas Bardino/emailAddress=bardino@diku.dk
	# to be mapped to 
	# /+C=DK+ST=NA+L=NA+O=DIKU+OU=NA+CN=Jonas_Bardino+emailAddress=bardino@diku.dk/PATH
	# 
	# Access is restricted with htaccess file in user homes so nothing to
	# worry about in relation to users spoofing rewrite targets.

	# Prepend certificate DN so that we can modify it further without PATH
	# interference 

	RewriteRule ^/cert_redirect/(.*) %{LA-U:ENV:SSL_CLIENT_S_DN}/cert_redirect/$1 [NE]

	# Keep replacing space in DN with underscore
	
	RewriteRule ^(.*)\ (.*)/cert_redirect/(.*)$ $1_$2/cert_redirect/$3 [N]
	
	# Keep replacing slash in DN with plus
	
	RewriteRule ^(.*)/(.*)/cert_redirect/(.*)$ $1+$2/cert_redirect/$3 [N]

	# Finally remove certificate marker
	RewriteRule ^(.+)/cert_redirect/(.*)$ /$1/$2 [N]
	
	######################################################################
	######################################################################
	
        # We need to let vgrid wiki cgi requests pass through to ScriptAlias*
	# handlers.
	# NB: first regex group *must* match DNs only - not '.*'!
	RewriteRule ^/([^/]+)/private_base/(.*)/(.vgrid[^/]+)/([^/]+-bin)/(.*)$ /$1/private_base/$2/$3/$4/$5 [L,PT]
	RewriteRule ^/([^/]+)/vgrid_shared/(.*)/(.vgrid[^/]+)/([^/]+-bin)/(.*)$ /$1/vgrid_shared/$2/$3/$4/$5 [L,PT]

	# Default target for all directories not explicitly configured
	<Directory />
		# Disable all overrides
		AllowOverride None
		# Enable FollowSymlinks and nothing else for all sub dirs
		Options FollowSymLinks
		# Deny all access to base mig dir and only allow on a subdir basis
		Order deny,allow
		Deny from all
	</Directory>
        # Public images shared by http and https pages and scripts
	Alias /images/ __MIG_HOME__/images/
	<Directory __MIG_HOME__/images>
		Order allow,deny
		Allow from all
	</Directory>
	<Directory "__MIG_HOME__/cgi-bin">
		SSLOptions +StdEnvVars
		Options +ExecCGI
		Order allow,deny
		Allow from all
	</Directory>
	# WSGI interface (only visible if mod_wsgi is loaded)
	<Directory __MIG_HOME__/wsgi-bin>
		SSLOptions +StdEnvVars
		Order allow,deny
		Allow from all
	</Directory>
	<Directory __MIG_HOME__/software-repository>
		SSLOptions +StdEnvVars
		Order allow,deny
		Allow from all
	</Directory>
	<Directory "__MIG_HOME__/cgi-sid">
		SSLOptions +StdEnvVars
		Options +ExecCGI
		Order allow,deny
		Allow from all
	</Directory>
	<Directory "__MIG_STATE__/user_home">
		# User home base is used for a number of public images and
		# templates.
		# Require a valid signed certificate for access to home base
		# and to individual user sub directories.
		# Access to user home dirs is further limited in .htaccess
		# files there.
		# The next line is crucial for cert_redirect to work!!!
		SSLOptions +StdEnvVars +ExportCertData
		# Remove source address based access limitations here
		Order allow,deny
		Allow from all
	</Directory>
	<Directory "__MIG_STATE__/user_home/*/">
		# Enable cert based auth with .htaccess file
		AllowOverride AuthConfig
	</Directory>
	<Directory "__MIG_STATE__/user_home/*/*/">
		# Do not allow or waste time on any nested htaccess files
		AllowOverride None
	</Directory>
	# Use email from certificate DN for semi-automatic Trac login:
	# http://trac.edgewall.org/wiki/TracClientCertificates
	# We use email because we want it to be short and unique, but any field
	# on http://httpd.apache.org/docs/current/mod/mod_ssl.html should work.
	# Changes here requires sync with the trac_id_field MiG conf option.
	#
	# Common mappings from Apache to MiG conf:
	# SSL_CLIENT_S_DN -> distinguished_name
	# SSL_CLIENT_S_DN_Email -> email
	# SSL_CLIENT_S_DN_CN -> full_name
	# SSL_CLIENT_S_DN_O -> organization
	<LocationMatch /(c|ws)gi-bin/trac.(c|ws)gi/login>
		SSLUserName SSL_CLIENT_S_DN_Email
	</LocationMatch>
	# SID access from resources
	Alias /sid_redirect/ "__MIG_STATE__/webserver_home/"
	<Directory "__MIG_STATE__/webserver_home/">
		Order deny,allow
		Allow from all
	</Directory>

# BEGIN OPTIONAL MiG VGrid MOIN MOIN WIKI
	Alias /wiki/ "__MOIN_SHARE__/htdocs/"
	<Directory __MOIN_SHARE__/htdocs>
		Order allow,deny
		Allow from all
	</Directory>

	#######################################################################
	# IMPORTANT: Never allow users writing in these cgi-bin's in any way! #
	# It would leave a remote execution hole open for all VGrid members.  #
	#######################################################################

	# Home directory vgrid component access - we need to avoid catching raw
	# cert_redirect URLs
	ScriptAliasMatch ^/([^/]+)/private_base/(.*)/(.vgrid[^/]+)/cgi-bin/(.*) __MIG_STATE__/user_home/$1/private_base/$2/$3/cgi-bin/$4
	ScriptAliasMatch ^/([^/]+)/vgrid_shared/(.*)/(.vgrid[^/]+)/cgi-bin/(.*) __MIG_STATE__/user_home/$1/$2/$3/cgi-bin/$4
# END OPTIONAL MiG VGrid MOIN MOIN WIKI

</VirtualHost>

# Configure SSL without certificates virtual host
<VirtualHost __SID_FQDN__:__SID_PORT__>
	# General setup for the virtual host
	ServerName __SID_FQDN__
	DocumentRoot "__MIG_STATE__/webserver_home"
	ErrorLog __APACHE_LOG__/ssl-sid-error.log
	CustomLog __APACHE_LOG__/ssl-sid-access.log common

        ScriptAlias /cgi-sid/ "__MIG_HOME__/cgi-sid/"
	
	#   SSL Engine Switch:
	#   Enable/Disable SSL for this virtual host.
	SSLEngine on

	# SSL options that depend on which virtual host is used
	#   Client Authentication (Type):
	#   Client certificate verification type and depth.  Types are
	#   none, optional, require and optional_no_ca.  Depth is a
	#   number which specifies how deeply to verify the certificate
	#   issuer chain before deciding the certificate is not valid.
	SSLVerifyClient none
	#SSLVerifyDepth  10

	# Default target for all directories not explicitly configured
	<Directory />
		# Disable all overrides
		AllowOverride None
		# Enable FollowSymlinks and nothing else for all sub dirs
		Options FollowSymLinks
		# Deny all access to base mig dir and only allow on a subdir basis
		Order deny,allow
		Deny from all
	</Directory>
        # Public images shared by http and https pages and scripts
	Alias /images/ __MIG_HOME__/images/
	<Directory __MIG_HOME__/images>
		Order allow,deny
		Allow from all
	</Directory>
	# WSGI interface (only visible if mod_wsgi is loaded)
	<Directory __MIG_HOME__/wsgi-bin>
		SSLOptions +StdEnvVars
		Order allow,deny
		Allow from all
	</Directory>
	<Directory "__MIG_HOME__/cgi-sid">
		SSLOptions +StdEnvVars
		Options +ExecCGI
		Order allow,deny
		Allow from all
	</Directory>
	# SID access from resources
	Alias /sid_redirect/ "__MIG_STATE__/webserver_home/"
	<Directory "__MIG_STATE__/webserver_home/">
		Order deny,allow
		Allow from all
	</Directory>

</VirtualHost>
